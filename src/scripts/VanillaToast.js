var TypeToast;
(function (TypeToast) {
    TypeToast["SUCCESS"] = "success";
    TypeToast["INFO"] = "info";
    TypeToast["WARNING"] = "warning";
    TypeToast["ERROR"] = "error";
    TypeToast["PLAIN"] = "plain";
    TypeToast["CUSTOM"] = "custom";
})(TypeToast || (TypeToast = {}));
var VanillaToast = (function () {
    function VanillaToast(parent) {
        this.REMOVE_TIME_MS = 3000;
        this.parent = parent;
        this.duration = this.REMOVE_TIME_MS;
    }
    VanillaToast.prototype.showSuccess = function (title, message) {
        var text = this.getCustomToast(title, message, TypeToast.SUCCESS);
        var toast = this.addToast(text);
        return toast;
    };
    VanillaToast.prototype.showInfo = function (title, message) {
        var text = this.getCustomToast(title, message, TypeToast.INFO);
        var toast = this.addToast(text);
        return toast;
    };
    VanillaToast.prototype.showWarning = function (title, message) {
        var text = this.getCustomToast(title, message, TypeToast.WARNING);
        var toast = this.addToast(text);
        return toast;
    };
    VanillaToast.prototype.showError = function (title, message) {
        var text = this.getCustomToast(title, message, TypeToast.ERROR);
        var toast = this.addToast(text);
        return toast;
    };
    VanillaToast.prototype.showPlain = function (title, message) {
        var text = this.getCustomToast(title, message, TypeToast.PLAIN);
        var toast = this.addToast(text);
        return toast;
    };
    VanillaToast.prototype.showCustom = function (title, message, iconUrl) {
        var text = this.getCustomToast(title, message, TypeToast.CUSTOM, iconUrl);
        var toast = this.addToast(text);
        return toast;
    };
    VanillaToast.prototype.getCustomToast = function (title, message, type, iconUrl) {
        if (!title)
            title = " ";
        if (!message)
            message = " ";
        var icon = '<div class="dj-toast-icon"></div>';
        if (type == TypeToast.CUSTOM) {
            icon = '<div class="dj-toast-icon" style="background-image: url(' + iconUrl + ');"></div>';
        }
        var toast = document.createElement("div");
        toast.className = "dj-toast dj-toast-" + type;
        toast.style.display = "none";
        toast.insertAdjacentHTML("afterbegin", icon +
            '<div class="dj-toast-text">' +
            '<div class="dj-toast-title">' + title + '</div>' +
            '<div class="dj-toast-message">' + message + '</div></div>');
        toast.fade = function (type, ms, onEnd) {
            var self = toast;
            var isIn = type === 'in', opacity = isIn ? 0 : 1, interval = 10, duration = ms, gap = interval / duration;
            if (isIn) {
                self.style.display = 'block';
                self.style.opacity = opacity;
            }
            function func() {
                opacity = isIn ? opacity + gap : opacity - gap;
                self.style.opacity = opacity;
                if (opacity <= 0)
                    self.style.display = 'none';
                if (opacity <= 0 || opacity >= 1) {
                    window.clearInterval(fading);
                    if (onEnd != null)
                        onEnd();
                }
            }
            var fading = window.setInterval(func, interval);
        };
        toast.fadeIn = function (ms, onEnd) {
            toast.fade("in", ms, onEnd);
        };
        toast.fadeOut = function (ms, onEnd) {
            toast.fade("out", ms, onEnd);
        };
        return toast;
    };
    VanillaToast.prototype.addToast = function (toast) {
        var self = this;
        var container = this.getContainer();
        container.appendChild(toast);
        var closeBtn = document.createElement("div");
        closeBtn.className = "dj-toast-icon-close";
        toast.appendChild(closeBtn);
        closeBtn.addEventListener("pointerdown", function () {
            self.removeToast(toast);
        });
        setTimeout(function () {
            self.removeToast(toast);
        }, self.duration);
        toast.fadeIn(VanillaToast.FADE_MS);
        return toast;
    };
    VanillaToast.prototype.getContainer = function () {
        if (!this.container) {
            this.container = document.createElement("div");
            this.container.className = "dj-toast-container";
            this.parent.appendChild(this.container);
        }
        return this.container;
    };
    VanillaToast.prototype.removeToast = function (toast) {
        toast.fadeOut(VanillaToast.FADE_MS, function () {
            toast.remove();
        });
    };
    VanillaToast.FADE_MS = 400;
    return VanillaToast;
}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,
