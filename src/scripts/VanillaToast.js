var ToastType;
(function (ToastType) {
    ToastType["SUCCESS"] = "success";
    ToastType["INFO"] = "info";
    ToastType["WARNING"] = "warning";
    ToastType["ERROR"] = "error";
    ToastType["PLAIN"] = "plain";
    ToastType["CUSTOM"] = "custom";
})(ToastType || (ToastType = {}));
var ToastPosition;
(function (ToastPosition) {
    ToastPosition["TOP_RIGHT"] = "top-right";
    ToastPosition["TOP_LEFT"] = "top-left";
    ToastPosition["BOTTOM_RIGHT"] = "bottom-right";
    ToastPosition["BOTTOM_LEFT"] = "bottom-left";
})(ToastPosition || (ToastPosition = {}));
var VanillaToast = (function () {
    function VanillaToast(parent) {
        this.REMOVE_TIME_MS = 3000;
        this.REMOVE_TIME_MIN_MS = 300;
        if (parent == null ||
            parent == "body" ||
            parent == "window" ||
            parent == document.body ||
            parent == window) {
            this.useFixedParent();
        }
        else {
            this.parent = parent;
        }
    }
    VanillaToast.prototype.showSuccess = function (title, message, position, duration) {
        if (position === void 0) { position = ToastPosition.BOTTOM_LEFT; }
        if (duration === void 0) { duration = this.REMOVE_TIME_MS; }
        var text = this.getCustomToast(title, message, ToastType.SUCCESS);
        var toast = this.addToast(text, position, duration);
        return toast;
    };
    VanillaToast.prototype.showInfo = function (title, message, position, duration) {
        if (position === void 0) { position = ToastPosition.BOTTOM_LEFT; }
        if (duration === void 0) { duration = this.REMOVE_TIME_MS; }
        var text = this.getCustomToast(title, message, ToastType.INFO);
        var toast = this.addToast(text, position, duration);
        return toast;
    };
    VanillaToast.prototype.showWarning = function (title, message, position, duration) {
        if (position === void 0) { position = ToastPosition.BOTTOM_LEFT; }
        if (duration === void 0) { duration = this.REMOVE_TIME_MS; }
        var text = this.getCustomToast(title, message, ToastType.WARNING);
        var toast = this.addToast(text, position, duration);
        return toast;
    };
    VanillaToast.prototype.showError = function (title, message, position, duration) {
        if (position === void 0) { position = ToastPosition.BOTTOM_LEFT; }
        if (duration === void 0) { duration = this.REMOVE_TIME_MS; }
        var text = this.getCustomToast(title, message, ToastType.ERROR);
        var toast = this.addToast(text, position, duration);
        return toast;
    };
    VanillaToast.prototype.showPlain = function (title, message, position, duration) {
        if (position === void 0) { position = ToastPosition.BOTTOM_LEFT; }
        if (duration === void 0) { duration = this.REMOVE_TIME_MS; }
        var text = this.getCustomToast(title, message, ToastType.PLAIN);
        var toast = this.addToast(text, position, duration);
        return toast;
    };
    VanillaToast.prototype.showCustom = function (title, message, iconUrl, position, duration) {
        if (position === void 0) { position = ToastPosition.BOTTOM_LEFT; }
        if (duration === void 0) { duration = this.REMOVE_TIME_MS; }
        var text = this.getCustomToast(title, message, ToastType.CUSTOM, iconUrl);
        var toast = this.addToast(text, position, duration);
        return toast;
    };
    VanillaToast.prototype.getCustomToast = function (title, message, type, iconUrl) {
        if (!title)
            title = " ";
        if (!message)
            message = " ";
        var icon = '<div class="vanilla-toast-icon"></div>';
        if (type == ToastType.CUSTOM) {
            icon = '<div class="vanilla-toast-icon" style="background-image: url(' + iconUrl + ');"></div>';
        }
        var toast = document.createElement("div");
        toast.className = "vanilla-toast vanilla-toast-" + type;
        toast.style.display = "none";
        toast.insertAdjacentHTML("afterbegin", icon +
            '<div class="vanilla-toast-text">' +
            '<div class="vanilla-toast-title">' + title + '</div>' +
            '<div class="vanilla-toast-message">' + message + '</div></div>');
        toast.fade = function (type, ms, onEnd) {
            var self = toast;
            var isIn = type === 'in', opacity = isIn ? 0 : 1, interval = 10, duration = ms, gap = interval / duration;
            if (isIn) {
                self.style.display = 'block';
                self.style.opacity = opacity;
            }
            function func() {
                opacity = isIn ? opacity + gap : opacity - gap;
                self.style.opacity = opacity;
                if (opacity <= 0)
                    self.style.display = 'none';
                if (opacity <= 0 || opacity >= 1) {
                    window.clearInterval(fading);
                    if (onEnd != null)
                        onEnd();
                }
            }
            var fading = window.setInterval(func, interval);
        };
        toast.fadeIn = function (ms, onEnd) {
            toast.fade("in", ms, onEnd);
        };
        toast.fadeOut = function (ms, onEnd) {
            toast.fade("out", ms, onEnd);
        };
        return toast;
    };
    VanillaToast.prototype.addToast = function (toast, position, duration) {
        if (duration === void 0) { duration = 0; }
        var self = this;
        if (duration <= self.REMOVE_TIME_MIN_MS) {
            duration = self.REMOVE_TIME_MIN_MS;
        }
        var container = this.getContainer(position);
        container.appendChild(toast);
        var closeBtn = document.createElement("div");
        closeBtn.className = "vanilla-toast-icon-close";
        toast.appendChild(closeBtn);
        closeBtn.addEventListener("pointerdown", function () {
            self.removeToast(toast);
        });
        setTimeout(function () {
            self.removeToast(toast);
        }, duration);
        toast.fadeIn(VanillaToast.FADE_MS);
        return toast;
    };
    VanillaToast.prototype.getContainer = function (position) {
        if (position == ToastPosition.TOP_LEFT && !this.containerTopLeft) {
            this.containerTopLeft = this.createContainer(position);
        }
        else if (position == ToastPosition.TOP_RIGHT && !this.containerTopRight) {
            this.containerTopRight = this.createContainer(position);
        }
        else if (position == ToastPosition.BOTTOM_LEFT && !this.containerBottomLeft) {
            this.containerBottomLeft = this.createContainer(position);
        }
        else if (position == ToastPosition.BOTTOM_RIGHT && !this.containerBottomRight) {
            this.containerBottomRight = this.createContainer(position);
        }
        if (position == ToastPosition.TOP_LEFT) {
            return this.containerTopLeft;
        }
        else if (position == ToastPosition.TOP_RIGHT) {
            return this.containerTopRight;
        }
        else if (position == ToastPosition.BOTTOM_LEFT) {
            return this.containerBottomLeft;
        }
        else if (position == ToastPosition.BOTTOM_RIGHT) {
            return this.containerBottomRight;
        }
        return this.containerBottomLeft;
    };
    VanillaToast.prototype.createContainer = function (position) {
        var container = document.createElement("div");
        container.className = "vanilla-toast-container-" + position;
        this.parent.appendChild(container);
        return container;
    };
    VanillaToast.prototype.useFixedParent = function () {
        var containers = document.getElementsByClassName("vanilla-toast-container-fixed");
        if (containers != null && containers.length > 0) {
            this.parent = containers[0];
            return;
        }
        var container = document.createElement("div");
        container.className = "vanilla-toast-container-fixed";
        document.body.appendChild(container);
        this.parent = container;
    };
    VanillaToast.prototype.removeToast = function (toast) {
        toast.fadeOut(VanillaToast.FADE_MS, function () {
            toast.remove();
        });
    };
    VanillaToast.FADE_MS = 400;
    return VanillaToast;
}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,
